@model Models.ViewModels.ProductCategoryView

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Product", FormMethod.Post, new { @class = "form-horizontal", @id = "prdtCreate", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.product.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.product.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.product.Sku, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.product.Sku, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Sku, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.product.Keyword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.product.Keyword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Keyword , "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.product.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.product.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.product.Prize, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.product.Prize, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                @Html.ValidationMessageFor(model => model.product.Prize, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.product.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <input type="file" name="product.ImageFile" />
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @*@for (int i = 0; i < Model.roles.Count(); i++)
                    {
                        bool res = Model.roles[i].Status == 1 ? false : false;
                        @Html.RadioButtonFor(model => Model.roles[i].RoleName,"")
                        <label>@Model.roles[i].RoleName</label>

                        <br />
                        @Html.ValidationMessageFor(model => Model.roles[i].RoleName, "", new { @class = "text-danger" })
                    }*@

                @foreach (var item in Model.category)
                {
                    @Html.Label(item.CategoryName)
                    <input type="checkbox" name="category" value="@item.Id" />
                    <br />
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-3">
                <input type="submit" value="Create" class="btn btn-success" id="adminCreate" />
            </div>
        </div>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/custom-validator")
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
